* 目标
** 1.	写一本综合“如何从零开始开发游戏，并提炼游戏引擎；记录游戏的开发过程；敏捷思想开发，代码质量”的书
我可以在工作时间做Web前端的工作，在业务时间坚持学习Html5游戏开发。
加上我对架构、测试、代码质量的理解，经过3年积累，也可以写一本综合“如何从零开始开发游戏，并提炼游戏引擎；记录游戏的开发过程；敏捷思想开发，代码质量”的书（最开始是没有游戏引擎的，记录如何通过迭代的方法开发游戏，并提炼游戏引擎，然后在下一个游戏中使用游戏引擎迭代开发）

 
* 策略
- 对于经典书籍，读完第一遍后，应该马上再读第二遍。读完两遍才能记录到经典书籍的目录中。
经典书籍读完两遍后，隔一段时间或者再需要使用时，再来读第三遍。
对于特别重要的经典书籍，可以经常复习。
- 对于一般书籍，读一遍即可。
 
* 待购买的书籍


 
* 待读目录


《编程珠玑》

《The Science Of Programming》

《调试九法》


//《算法导论》
////《游戏开发导论》
////《游戏开发核心技术——剧本和角色创造》
//《网络游戏开发》 作者: Bridgette Patrovsky / Jessica Mulligan 
////《HTML5与CSS3设计模式》
////《精通css与html设计模式》
//《面向模式》系列
//《Javascript设计模式》
//《实现模式》 Kent Beck
//《反模式 危机中软件架构和项目的重构》



//《深入理解c#》
//《CLR via C#》
//《代码大全2》



项目管理：
《快速软件开发》

综合能力提升：
《部落领导力》（《Tribal Leadership》）


 
* 垃圾书籍
** 1.	《精通Javascript》	1遍
该书讲解了Javascript的大部分技术。内容比较广泛，但是却不是很深入
与其看该书，还不如看《Javascript编程宝典（第二版）》。那本书讲的内容更多。
	如果真想深入理解Javascript，还是看汤姆大叔的博客 -> 深入理解Javascript系列比较好！

 
* 一般书籍
** 1.	《SQL Server 2005 Web 应用开发》
** 2.	《.net与设计模式》
讲解了.net下设计模式的应用。不过有些例子是vb，让我很不习惯！
** 3.	《jQuery全面提速》
** 4.	《Javascript编程宝典（第2版）》
** 5.	《ADO.NET ** 2.0技术内幕》	2遍
详细讲解了ado.net** 2.0。
** 6.	《面向方面软件开发的理论、技术与实践》	1遍
该书介绍了面向方面AOP的知识，并且给出了使用AspectJ（实现AOP的系统，使用Java语言）的开发实例。
通过学习该书，我了解了AOP思想、与OOP的区别、以及使用AspectJ实现AOP的方法。
第1、2章介绍了AOP思想以及如何实现。
第3-5章介绍了AspectJ的基本概念和实现原理。
第6章介绍了扩展UML进行AOP建模。
第7、8章给出了AspectJ开发实例，让我看到了AOP的运用。
第9章介绍用AOP改进设计模式。
第10-12章介绍其它AOP系统。
总的来说，该书适合作为AOP的入门书籍，让我对AOP有了一定的认识。
** 7.	《CSS实战手册（第2版）》	1遍
本书讲解了CSS的相关知识，可以作为系统学习CSS技术、查阅相关内容的技术手册。
本书包括了第4章 继承、第5章 层叠、第6章 css处理文本、第7章 Margin Padding和Border、第8章 控制图片和url相关知识、第9章 构建导航栏、第10章 使用css格式化表格与表单、第12章 浮动布局、第13章 定位、第14章 创建打印样式表、第15章 css的最佳实践、第16章 介绍CSS3。
总的来说，本书内容较丰富，包括了主要的css知识、一些bug处理，缺少hack技术。通过该书的学习，可以梳理css知识，系统学习css的技术。在实际的网页设计时，可以参考该书的相关内容。
** 8.	《论道HTML5》	1遍
本书包括了主要的CSS3和HTML5的技术，并给出了一些实例来演示如何应用CSS3、HTML5。
第1章	利用HTML5制作网站，介绍了新标签、Web Form** 2.0等内容。
第2章	讲解了CSS3的新增内容。
第3章	HTML5的API，包括拖动、History、通信、桌面通知、audio和video、画布、WebSocket、WebWorker、WebStorage、Web Database、WebGL、Device等API的介绍。
第4章	讲解了Canvas原理、主要的API应用、以及一些使用经验。
第5章	讲解了在移动互联网上的应用。
第6章	讲解了WebSocket的知识及应用，并介绍了Node.js的安装、应用。
第7章	讲解了瘦子服务器的概念与概念架构，讲解了Web Storage、离线应用缓存、Web Worker的概念及应用，给出了云记事本的案例。
本书对我全面了解CSS3、HTML5很有帮助，可以作为技术手册，在用到相应的技术时查阅
** 9.	《JSP应用与开发技术》 未完
本书讲解了JSP、JSP文件操作、JavaBean、JDBC、Servlet、filter等内容，对快速上手原生JSP（没有讲Strus2等框架）开发很有用。
本书可以作为JSP开发的参考书籍。
** 10.	《JUnit实战（第2版）》	1遍
本书全面讲解了java的测试，包括JUnit、Cactus对Servlet等测试、DBunit对数据层测试等内容。
本书可以作为JSP测试的参考书籍。
** 11.	《JDBC数据库编程与J2EE》	未完
本书详细介绍了JDBC规范和API。
本书可以作为JDBC使用的参考书籍，如可以查阅Connetction类、Statement类、ResultSet类的API和使用说明等内容。
** 12.	《高端3D游戏：从创意到App Store全程实录》	1遍
本书从美工的角度，讲解了使用Unity 3D引擎来制作ios的3D游戏“蛮荒之地3D”的过程，对我了解3D游戏美术的制作过程及开发ios游戏并发布到App Store的流程有所帮助。
** 13.	《Cocos2D权威指南》	粗读1遍
本书是用Object-C写的，所以代码部分我基本上就没看。我看了下Cocos2D的组成部分，最大的收获就是发现了“动作”这一概念的重要性。
可以学习Cocos2D-Html5版本来学习Cocos2D。
** 14.	《HTML5 Canvas 游戏开发实战》	粗读1遍
本书先介绍了Html5 Canvas的相关知识，然后介绍了开源游戏引擎lufylegend，最后进行实战，使用该引擎开发了几个游戏。
非计算机专业非专业游戏开发的人，在业余时间坚持学习游戏开发，经过长期积累，开发了Html5开源游戏引擎lufylegend，并写了本书。
作者的故事对我是一个启发，我或许也可以在工作时间做Web前端的工作，在业务时间坚持学习Html5游戏开发，然后再加上我对架构、测试、代码质量的理解，经过3年积累，也可以写一本综合“如何从零开始开发游戏，并提炼游戏引擎；记录游戏的开发过程；敏捷思想开发，代码质量”的书（最开始是没有游戏引擎的，记录如何通过迭代的方法开发游戏，并提炼游戏引擎，然后在下一个游戏中使用游戏引擎迭代开发）
** 《AngularJS权威指南》1遍
本书全面讲解了angular1.0 的核心设计思想和使用方法，作为angular的入门书籍，还是比错的。
** 《3D数学基础：图形与游戏开发》未完
本书详细谈论了3d中的矩阵、旋转缩放、四元数等相关的数学知识，对于深入理解3d变换还是很有帮助的。
** 《学习的艺术》1遍
内容概要说明
    作者自小学习国际象棋，拿到了世界冠军，然后又转学太极，又拿到了世界冠军。
    在本书中，作者讲述了自己的学习方法和理念，以及自己的心得体会，让我看到了超一流人物的心理和历程，很正面！

目录说明

如何应用该书

我的心得与体会
    跟一万个小时理论有点像，要成为超一流的人物，就要不断地突破、挑战自己，不断地学习，并不断地分析和总结，并且对所从事地
    事业有发自内心地兴趣和热情！
    我也能成为世界级地大师人物！

** 《人工智能的未来》1遍
内容概要说明
    本书是描述人脑如何工作的全面理论，提出了很多让我印象深刻的理论，如：
    大脑处理的都是模式，即五官传来的信号，都会转化为同一种模式，再由大脑处理。因此，大脑的耳朵区域，可以处理视觉信号！
    记忆－预测模型，大脑会对短暂的未来进行预测！

目录说明

如何应用该书
游戏ai或许可以借鉴人脑的工作模式？

我的心得与体会
   本书让我对人脑的工作模式有了全面的了解。

* 经典书籍（书名 阅读次数 阅读第一遍花的时间）
** 1.	《软件工程》	2遍
详细讲解了软件工程的知识。很有用，值得多读。我已收藏。
** 2.	《你必须知道的.net（第2版）》		2遍
详细讲解了.net框架的细节，很有用。我已收藏。
** 3.	《冒号课堂：编程范式与OOP思想》	4遍
讲解了面向对象的经验，很有用。我已收藏。
** 4.	《设计模式之禅》	未看完
已通俗易懂的语言讲解了设计模式，并进行了扩展介绍，很好。我已收藏。
** 5.	《JavaScript模式》	3遍
讲解了javascript中的技巧和模式，以及部分js优化策略（第8章）。写得很好，我已收藏。
** 6.	《重构：改善既有代码的设计》 2遍
经典书籍，可以作为重构的工具书，随时翻阅。我已收藏。
** 7.	《代码整洁之道》	2遍
有些内容与《重构》的思想相似，也是将如何改进代码的书。我已收藏。
** 8.	《测试驱动的Javascript开发》 3遍
讲解了测试驱动开发及在Javascript中运用测试驱动开发的实例。我已收藏。
** 9.	《人月神话》（注释版）	1遍
书倒是经典书籍，不过由于是英文版的，而且我英语水平不高，所以阅读该
书权当学习英语。。。。。。
** 10.	《软件随想录》	1编
里面有些项目管理的知识（如“循证式日程规划”）很好，讲解了如何程序员想要什么、发布软件的经济学分析等内容。
** 11.	《创业必经的那些事 1》	1遍

创业必看，讲解了为什么创业失败，企业发展的三个阶段，如何经营企业等内容。
** 12.	《敏捷软件开发原则、模式与实践（C#版）》	4遍
讲解了敏捷设计、类设计原则和包设计原则、UML、设计模式、薪水项目的设计与实现以及打包。
以下章节对我帮助很大：
第6章（采用TDD开发保龄球比赛程序（C#））、第20章（咖啡机的面向对象设计与实现）、第26章（薪水项目的面向对象设计的过程与思路）、第28章（包和组件的设计原则）、第30章（薪水项目的包分析）、第37章（测试数据层）
** 13.	《修改代码的艺术》	2遍
讲解了对付遗留代码的技术。其中有一些对测试的理解（如测试私有方法）。
我目前正在使用本书的技术来重构连连看代码。
** 14.	《软件架构设计（第二版）》	温昱 3遍
书中一共有三个部分，分别讲解了软件架构的概念，架构设计的方法、过程及步骤，模块划分专题。
书中的第2部分，介绍了整个架构从需求到设计的流程，并对每个流程展开说明，并给出了实例。
书中的第3部分，介绍了架构师的关键技能：模块划分。包括水平划分（分层）、垂直划分（子系统）、用例驱动设计（自底向上）等内容。这部分可以结合《敏捷软件开发原则、模式与实践》中的包设计部分来理解消化。
该书系统梳理了架构设计的知识，让我对架构设计有了更深入的理解，是一本很好的架构设计的参考资料。
** 15.	《一线架构师实践指南》 温昱	1遍
该书重实践，《软件架构设计》重理论。
该书给出了一些实践经验，以及具体的实例，可以作为《软件架构设计》在实践方面的补充！
建议设计架构时，参考《软件架构设计》和该书！
** 16.	《程序员修炼之道》	（评注版）1遍
该书讲解了如何成为更好的程序员，涉及到了成为优秀程序员的方方面面，注重实践经验。
该书为英文版本，不但让我学习了英语，也让我更加了解了如何成为优秀的程序员，让我坚信了自己现在正处于正确的提升道路上。
** 17.	《高性能Javascript》	3遍
这是一本关于Javascript性能的书。从javascript底层的角度讲解了如何进行优化，为什么要优化以及优化前后对比等，是一本信息量较大，对我很有帮助的技术书籍！
第1章加载和执行介绍了Javascript文件下载与执行的时机及优化。
	第3章DOM编程深刻阐释了DOM的本质以及DOM操作的优化。
第6章快速响应的用户界面中关于Javascript线程的论述，也让我受益匪浅。
第7章Ajax介绍了向服务器请求数据的五种方式、向服务器发送数据的两种方式、各种数据格式的比较（XML、JSON、JSON-P、HTML、自定义格式）、Ajax缓存的知识。
而第9章构建并部署高性能Javascript应用没有看的必要！因为作者是基于Apache Ant工具来展开论述的，而我对该工具不熟悉！该章的内容在《Javascript模式》中有论述，故可参考该书！
** 18.	《游戏开发中的人工智能》	2遍
该书包含了大部分的人工智能AI技术，每个方面都讲了入门级知识。适合AI开发新手阅读。
通过阅读该书，对AI技术有了一个总体认知，对每个专题（如移动模式、路径寻找、模糊逻辑等）有了初步的认识。如果想进一步对专题进行深入研究，可再参考该专题的其它书籍和文章。
** 19.	《领域驱动设计》	3遍
本书提出了模型驱动设计，围绕领域建模来展开论述。
第1-3章提出了领域建模的注意事项。
第5章介绍了模型的组成部分：Entity、Value Object、Service、Module。
第6章介绍了聚合体AGGREGATE、存储库REPOSITORY、工厂。
第7章介绍了对初步的领域模型进行重构细化的过程，展示了将领域模型细化为详细架构的过程。
第8章展示了初步的领域模型的演化直到获得突破的过程。
第9章讲解了如何实现深层建模，以及将业务规则提出来的思想（提出了SPECIFICATION规格模式）。
第10章提出了一些原则、启发，参考这些模式能获得柔性设计。
第四部分从较高的范围来展开论述。
第14章提出了上下文BOUNDED CONTEXT、持续集成、上下文之间如何联系起来CONTEXT MAP、BOUNDED CONTEXT之间的关系（共享内核、客户/供应商等关系）、选择上下文的策略以及如何转换BOUNDED CONTEXT之间关系。
第15章讲解了如何提炼出核心模型CORE DOMAIN。
第16章讲解了大比例结构。包括进化迭代的思想来重构大比例结构、系统隐喻、分层、KNOWLEDGE LEVEL、可插入式组件框架PLUGGABLE COMPONRNY FRAMEWORK。
通过阅读该书，了解了领域模型的重要性，领域模型不只是用来转化为数据库表，也与实际的架构模型应该对应。了解了关于设计的启示（风格与《敏捷》有点像）。
本书不愧是一本经典书，对提高设计能力很有帮助！
** 20.	《高效程序员的45个习惯：敏捷开发修炼之道》	1遍
本书讲解了敏捷开发的最佳实践，从态度、学无止境、交互用户想要的软件、敏捷反馈、敏捷编码、敏捷调试、敏捷协作、走向敏捷来展开论述。展示了敏捷开发的过程、实现、方法，使我对“如何成为高校的敏捷人员”有了更深入的认识。
下面是对我启发较大的内容：
 1.	第4章-15 提早实现自动化部署。
提出了一开始就自动化部署应用，如使用户可以在线看到我们的演示系统。
2.	第5章-21 不同环境，就有不同的问题。
提到了“持续集成”。可以用一个持续集成工具，周期性地从源代码控制系统中取得代码，并运行代码。如果有任何测试失败了，它会通知相关的开发者。
3.	第5章-22 自动验收测试。
提到了FIT，即集成测试框架。它可以更容易地使用HTML表格定义测试用例，并比较测试结果数据。
使用FIT，客户可以定义带有新功能的使用样本。客户、测试人员和开发人员（根据样本）都可以创建表格，为代码描述可能的输入和输出值。开发人员会参照样本编写测试代码。测试结果成功或者失败，都会显示在HTML页面中，用户可以很方便地查阅。
** 21.	《重构HTML：改善Web应用的设计》	1遍
本书展示了如何重构HTML，也可以说是提出了一些好的实践方法，来获得HTML更好的可靠性、性能、可用性、安全性、可访问性、兼容性以及优化搜索引擎搜索。
	第2章提出了一些测试、重构HTML的工具。
	第3章提出了实现HTML良构的方法。其中包括：** 3.12节“加入XHTML DOCTYPE声明”介绍了DOCTYPE声明；** 3.16节“加入XHTML命名空间”。
	第4章提出了保持有效性（不仅要确保文档的语法正确，还要保证语义正确）的实践方法。其中包括** 4.14节“把行内元素放到块元素中”介绍了HTML的几类元素和文本（段落、块级元素、行内元素等），提出了p和pre只能包含纯文本或其他行内元素。
	第5章从布局的方面提出了最佳实践。
	第6章讲解可访问性的最佳实践，关注用户体验。
	第7章Web应用程序，讲解了一些关于Web应用程序的主题。如Post与Get、Http缓存、web form** 2.0、转义用户输入防SQL注入等。
	本书对于我理解HTML，掌握对HTML优化有一定的帮助！可以作为工具书，遇到相关的问题时，查阅该书寻找参考的解决方案。
** 22.	《JavaScript权威指南》	1遍
本书系统讲解了JavaScript的知识，包括：
1.	JavaScript语言核心
主要讲解了JavaScript语言本身，以及服务器端JavaScript（Node.js）。
2.	客户端JavaScript
Window对象、脚本化文档（DOM）、脚本化CSS（CSS基本知识、JavaScript操作CSS）、事件处理、脚本化HTTP（AJAX、Comet、动态加载script）、JQuery类库使用、客户端存储（cookie、localStorage和sessionStorage、离线存储等）、多媒体和图形编程（Html5的audio和video标签、SVG和Canvas绘图）、HTML5的API
3.	JavaScript核心参考
4.	客户端JavaScript参考
本书内容丰富，讲解得比较细，比较简单易懂，可以作为JavaScript工具书，需要相关知识时可对应本书的章节进行查询。
** 23.	《HTTP权威指南》	2遍	10小时
本书是HTTP及其相关核心Web技术方面的权威著作，适合所有想了解HTTP和Web底层结构的人阅读。
本书包含21章，分为5个逻辑部分（每部分都是一个技术专题），以及8个很有用的附录，这些附录包含了参考资料，以及对相关技术的介绍。
第一部分　HTTP：Web的基础
第二部分　HTTP结构
第三部分　识别、认证与安全
第四部分　实体、编码和国际化
第五部分　内容发布与分发
第六部分　附录
第一部分用4章的篇幅描述了Web的基础构件与HTTP的核心技术。
第1章简要介绍了HTTP。
第2章详细阐述了统一资源定位符（Uniform Resource Locator，URL）的格式， 以及URL在因特网上命名的各种类型的资源，还介绍了统一资源名（Uniform Resource Name，URN）的演变过程。
第3章详细介绍了HTTP报文是如何传送Web内容的。
第4章解释了HTTP连接管理过程中一些经常会引起误解且少有文档说明的规则和行为。
第二部分重点介绍了Web系统的结构构造块：HTTP服务器、代理、缓存、网关以及机器人应用程序。（当然，Web浏览器也是一种构造块，但在本书的第一部分已经对其进行过很详细的介绍了。）第二部分包含以下6章。
第5章简要介绍了Web服务器结构。
第6章深入研究了HTTP代理服务器，HTTP代理服务器是作为HTTP服务与控制平台使用的中间服务器。
第7章深入研究了Web缓存的问题。缓存是通过保存常用文档的本地副本来提高性能、减少流量的设备。
第8章探讨了网关和应用服务器的概念，通过它们，HTTP就可以与使用不同协议（包括SSL加密协议）的软件进行通信了。
第9章介绍了Web上的各种客户端类型，包括无处不在的浏览器、机器人和网络蜘蛛以及搜索引擎。
第10章讲述了仍在研究之中的HTTP协议：HTTP-NG协议。
第三部分提供了一套用于追踪身份、增强安全性以及控制内容访问的技术和技巧。包含下列4章。
第11章讨论了一些识别用户的技术，以便向用户提供私人化的内容服务。
第12章重点介绍了一些验证用户身份的基本方式。这一章还对HTTP认证机制与数据库的接口问题进行了研究。
第13章详述了摘要认证，它是对HTTP的建议性综合增强措施，可以大幅度提高其安全性。
第14章说明了因特网的密码体系、数字证书以及SSL。
第四部分涵盖HTTP报文主体和Web标准，前者包含实际内容，后者描述并处理主体内容。第四部分包含以下3章。
第15章介绍了HTTP内容的结构。
第16章探讨了一些Web标准，通过这些标准，全球范围内的用户都可以交换以不同语言和字符集表示的内容。
第17章解释了一些用于协商可接受内容的机制。
第五部分介绍了发布和传播Web内容的技巧。包括以下4章。
第18章讨论了在现代的网站托管环境中布署服务器的方式以及HTTP对虚拟网站托管的支持。
第19章探讨了一些创建Web内容，并将其装载到Web服务器中去的技术。
第20章介绍了能够将输入Web流量分散到一组服务器上去的一些工具和技术。
第21章介绍了一些日志格式和常见问题。
第六部分是一些很有用的参考附录，以及相关技术的教程。
	
本书知识点较多，内容广而浅，没有难度，可以帮助读者全面了解Web底层结构。
** 24.	《创业必经的那些事 2》	1遍
本书是系列的第2本书，与第1本书有些相同的观念（废话！同一个作者写的），如三种角色（国王、管理者、技师），创新、量化、统一等。
本书的核心观念就是：作为管理者，要想企业家那样，把公司当成自己的公司，强调要具有自我意识，注重换位思考。
本书强调要管理系统，而不是管理人，因为人是不可管理的，因此需要创建一个愿景，一套流程，每个人都能在流程中快速上手，认同企业文化。
“创业”系列书籍的观点与众不同，耐人寻味，在创业之前需要认真品读。
** 25.	《神作之路 卓越游戏设计剖析》	1遍
内容概要说明
	本书通过对游戏个列分析，总结卓越游戏的开发经验及其制作的过程。
目录说明
第1部分：
对10个卓越游戏（包括主机游戏、网页游戏、网络游戏魔兽世界等）进行了分析，指出了它们各自的相关资料（如开发公司、团队大小、开发引擎等）、正确举措、失策之处，并包含了对游戏团队关键角色的访谈录。
	第2部分：
	对游戏案例进行总结分析，指出正确举措和失策之处，总结如何构建高效团队，介绍了团队的角色和游戏开发的过程，介绍了招聘与管理的经验。
我的心得与体会
	本书对我了解整个游戏开发的过程很有帮助，它也让我认识到了技术积累、原型开发、迭代的重要性，认识到了我目前没有自主创业的资本，需要进入比较大的游戏公司或者卓越的团队，至少积累3年游戏相关经验。
	在大的游戏公司或者卓越的团队可以学习到追求卓越的精神和卓越的游戏开发经验，这样会让我的起点更高，视野更广，追求也更高，另外也更容易通过一起做项目来找到志同道合的朋友，打造自己的团队，为以后的独立开发做准备！
** 26.	《HTML5 Canvas核心技术：图形、动画与游戏开发》	1遍
内容概要说明
	本书不仅全面讲解了Canvas的API，以及如何利用Canvas进行图形绘制、动画制作、物理效果模拟、碰撞检测、游戏开发、移动应用开发，还包括大量实例，可操作性极强。
目录说明
全书共分11章。
第1章介绍了canvas元素及如何在网络应用程序中使用它；
第2章深入研究了如何使用canvas的api进行绘制；
第3章告诉读者如何绘制并操作canvas中的文本；
第4章专门讲解图像、图像的操作及视频处理；
第5章介绍如何实现平滑的动画效果；
第6章讲解如何用javascript语言来实现精灵；
第7章展示了如何在动画中模拟物理效果；
第8章介绍了进行碰撞检测所用的技术；
第9章以一个简单但是高效的游戏引擎开始，提供了游戏制作所需的全部支持功能；
第10章讨论了实现自定义控件的通用方法；
第11章专门讲述如何实现基于canvas的手机应用程序。
我的心得与体会
	本书可以作为我的系列博客“Html5 技术学习系列”的Canvas部分的参考书。其中第2、3、7、11章我还没有仔细研究，在写系列博客时再看。
	本书第5-9章讲解了用Canvas做游戏的相关技术，很有用。制作游戏引擎也可以参考第9章的示例。
** 27.	《xUnit测试模式：测试码重构》	2遍
内容概要说明
	本书是一本关于如何解决测试中遇到的问题的实战经验书籍，给出了测试相关的概念、术语、经验、味道以及模式和实例。
目录说明
第1部分总体介绍了测试的模式和相关知识，包括测试的味道、目标、基本观点、原则、策略，以及提出夹具的管理、结果验证、测试替身、组织测试、数据库测试等内容。
	第2部分介绍了三大类测试味道：代码味道、行为味道、项目味道，对每种味道进行了详细分析，并介绍了解决方案模式。
	第3部分介绍了测试的模式。对应第1部分，给出了具体实例，是对第1部分的补充。
如何应用该书
	在实际应用中，遇到测试相关的问题后，可以知道该问题在该书中对应的术语、模式以及解决方案，可以再看该书中相应的内容（如第3部分对应的模式）。
我的心得与体会
	本书内容组织的方式类似于《重构》一书，同样也应用于实战，来源于实战。
	因为我有一些测试的实战经验，所以看本书时就比较顺利，同时也深入了我对平时遇到的测试问题的理解。
	所以建议先积累一些实战经验，然后再看该书，然后再应用于实战中。
	提取模式果然是一个强大武器，这也是敏捷的一个精髓啊！
** 28.	《计算机程序的构造和解释》	2遍
内容概要说明
	本书使用Lisp语言，从程序设计思想的角度介绍了构造过程抽象、构造数据抽象、面向对象设计和并发和流等内容，给出了若干设计实例。
	本书是一本介绍设计思想的书，重点介绍了抽象的思维。
目录说明
第1章：构造过程抽象。
本章讲解了面向过程设计的思想。
第2章：构造数据抽象。
本章介绍了模块化、层次化思想。
第3章：模块化、对象和状态
本章介绍了对象的结构实现、并发、流等内容。
如何应用该书
我的心得与体会
	我只看了本书前3章，并参考网上资料做了1遍前3章的习题（** 3.5流的习题没做。“流”这部分我只学习了下思想，没有掌握）。
	第1章很简单，第二章有难度，第三章简单（流的习题没做，有一定难度）。
	本书让我加深了对程序设计的理解，并学习了递归的使用。
** 29.	《深入理解计算机系统》	3遍
内容概要说明
	本书从程序员的角度介绍了计算机系统，概述了计算机整个系统的实现，帮助读者建立一个层次性的计算机系统模型。
目录说明
第1章：计算机系统漫游
大概介绍了整个计算机系统
第2章：信息的表示和处理
介绍了存储单位、整数和浮点数的表示及运算
第3章：程序的机器级表示
介绍了汇编语言
第4章：处理器体系结构
介绍了处理器硬件的设计，介绍了指令集、逻辑电路、指令处理的5个阶段（取指、译码、执行、访存、写回），介绍了指令流水线原理，以及使用暂停、转发等技术处理流水线的数据相关和控制相关。
第5章：优化程序性能
介绍了程序优化策略，优化循环的关键路径，包括：
消除连续的函数调用
将计算移到循环外
消除不必要的存储器引用（引入临时变量保存中间结果）
展开循环（增大循环步长）
通过使用如多格累积变量利用并行执行
重新结合
用功能的风格重写条件操作，使得编译采用条件数据传送
第6章：存储器层次结构
介绍了高速缓存SRAM、主存DRAM、磁盘的实现原理，介绍了存储器层次结构。
第7章：链接
介绍了
链接器的主要任务（符号解析和重定位）
静态链接
静态库
动态链接
第8章：异常控制流
介绍了4种类型的中断，用户模式与内核模式的切换，进程控制和进程间信号通信，非本地跳转。
第9章：虚拟存储器
介绍了虚拟存储器，地址翻译，CPU、MMU和缓存、磁盘之间的页命中、缺页的执行过程，动态存储器分配（堆）等内容。
第10章：系统级I/O
介绍了文件的操作，描述符表->打开文件表->v-node表。
第11章：网络编程
介绍了集线器、网关、路由等，介绍了套接字操作，实现了简单的web服务器
第12章：并发编程
介绍了进程、I/O多路复用、线程这三种不同的构建并发程序的机制，并扩展了一个并发网络服务器。
介绍了互斥，介绍了生产者-消费者和读者-写者模型，介绍了线程不安全函数和竞争、死锁。
如何应用该书
我的心得与体会
	该书介绍了系统底层实现，为我整体理解计算机很有帮助。

** 30.《WebGL编程指南》1遍
内容概要说明
    本书从0开始讲解了WebGL的核心技术，并给出了示例代码，可以学到最基础的webgl知识。

目录说明
第1 章 WebGL 概述 
第2 章 WebGL 入门 
第3 章 绘制和变换三角形 
第4 章 高级变换与动画基础 
第5 章 颜色与纹理 
第6 章 OpenGL ES 着色器语言（GLSL ES） 
第7 章 进入三维世界 
第8 章 光照 
第9 章 层次模型 
第10 章 高级技术

如何应用该书
学习每个专题及示例代码，自己走一遍，掌握对应的技术。

我的心得与体会
   我是边看本书，边自己完成示例（参考书中的示例代码），并对形成我的3d引擎很有帮助。
   同时我结合网上的webgl示例代码（如google的代码）和3d引擎（playcanvas,threejs,unity)，逐步完善我的3d引擎。
** 《创新者的窘境》1遍 推荐
内容概要说明
    本书讲解了成熟企业为何大多不能正确处理破坏性技术，而导致淘汰地原因，并给出了应对策略，揭示了内在的法则，并根据实际的
    案例进行了分析。

目录说明

如何应用该书

我的心得与体会
    本书让我茅塞顿开，认识到我的技术思维的局限，应该多读几遍！
也认识到现有的html5技术可能是破坏性技术，我应该采取何种策略才能成功：
不应该只研究技术，而是有了初步的技术后（有了可用的3D引擎、工具等），尽快地找到并应用于适用于html5的新兴市场（微信h5游戏，
    接活中的webgl游戏、html5游戏？），然后再不断地进行延续性改进，提升产品（改进引擎、工具，改进游戏，打造优秀合适的团
    队。。。），等到html5的整体环境性能达到主流市场的需求时（如浏览器的支持（qq浏览器？））,能够作为领先者占有市场一席之
    地！

** 《Design by Contract 原则与实践》1遍
内容概要说明
    本书通过实例，详细而层层推进地探讨了“契约式设计”地思想原则和实践方法，引入了Dbc地六大原则和六大准则，展示了它们地运
用，分析了Dbc和继承地关系，介绍了框定规则、Dbc的好处和限制、观察者框架中的契约和先验条件检验；最后给出了一个Java范例，
并探讨了契约在分析模型中的应用。
    本书思维严密，逻辑性很强，跟我的《提炼引擎系列》有点像～


目录说明


如何应用该书
Wonder.js引擎就使用了dbc，使用typescript的decorator来实现require和ensure,invariant。
现在我主要使用 契约 来替代防御性编程，检查先验条件和后验条件。

我的心得与体会
   Dbc对提高代码质量有帮助，可与单元测试结合起来，Dbc提供运行时检查（检查先验、后验条件，进行防御式检查和测试），单元测
试提供静态测试，测试功能能代码。

** 《Game Programming Patterns》1遍
*** contents
This is a online e-book that talks about design pattern in game.
First it revisit a part patterns(6 patterns) of gof,
Then it discuss useful patterns that some of them are already applied in Wonder.js engine.

*** catalogue
- Introduction
Architecture, Performance, and Games

- Design Patterns Revisited
Command
Flyweight
Observer
Prototype
Singleton
State

- Sequencing Patterns
Double Buffer
Game Loop
Update Method

- Behavioral Patterns
Bytecode
Subclass Sandbox
Type Object

- Decoupling Patterns
Component
Event Queue
Service Locator

- Optimization Patterns
Data Locality
Dirty Flag
Object Pool
Spatial Partition

*** my experience
The book is full of practical experiences and the discussition is very detailed and instructive.

The "State pattern" chapter discuss the Concurrent State Machines, Hierarchical State Machines, Pushdown Automata that
are instructive and will be useful.

The "Service Locator" chapter is new to me that it's the first time to touch the pattern.Though the author suggest that
it can use DI instead of it in some cases.

The "Data Locality" chapter is important and a useful way for optimizing.
It stresses the cache miss problem.

The "Spatial Partition" chapter is important too that i will use the technology to organize objects of scene.



** 《编程珠玑》 1遍
内容概要说明
   本书章节相互独立，在基础、性能、应用三个部分的主题中，给出了案例、经验、总结，并且每章后面还有习题，确实是一本很好的
经典书籍！


目录说明
第一部分　基础
　　第1章　开篇
　　1.1　一次友好的对话
　　1.2　准确的问题描述
　　1.3　程序设计
　　1.4　实现概要
　　1.5　原理
　　1.6　习题
　　1.7　深入阅读
　　第2章　啊哈！算法
　　2.1　三个问题
　　2.2　无处不在的二分搜索
　　2.3　基本操作的威力
　　2.4　排序
　　2.5　原理
　　2.6　习题
　　2.7　深入阅读
　　2.8　变位词程序的实现（边栏）
　　第3章　数据决定程序结构
　　3.1　一个调查程序
　　.　3.2　格式信函编程
　　3.3　一组示例
　　3.4　结构化数据
　　3.5　用于特殊数据的强大工具
　　3.6　原理
　　3.7　习题
　　3.8　深入阅读
　　第4章　编写正确的程序
　　4.1　二分搜索的挑战
　　4.2　编写程序
　　4.3　理解程序
　　4.4　原理
　　4.5　程序验证的角色
　　4.6　习题
　　4.7　深入阅读
　　第5章　编程小事
　　5.1　从伪代码到c程序
　　5.2　测试工具
　　5.3　断言的艺术
　　5.4　自动测试
　　5.5　计时
　　5.6　完整的程序
　　5.7　原理
　　5.8　习题
　　5.9　深入阅读
　　5.10　调试（边栏）
　　第二部分　性能
　　第6章　程序性能分析
　　6.1　实例研究
　　6.2　设计层面
　　6.3　原理
　　6.4　习题
　　6.5　深入阅读
　　第7章　粗略估算
　　7.1　基本技巧
　　7.2　性能估计
　　7.3　安全系数
　　7.4　little定律
　　7.5　原理
　　7.6　习题
　　7.7　深入阅读
　　7.8　日常生活中的速算（边栏）
　　第8章　算法设计技术
　　8.1　问题及简单算法
　　8.2　两个平方算法
　　8.3　分治算法
　　8.4　扫描算法
　　8.5　实际运行时间
　　8.6　原理
　　8.7　习题
　　8.8　深入阅读
　　第9章　代码调优
　　9.1　典型的故事
　　9.2　急救方案集锦
　　9.3　大手术——二分搜索
　　9.4　原理
　　9.5　习题
　　9.6　深入阅读
　　第10章　节省空间
　　10.1　关键在于简单
　　10.2　示例问题
　　10.3　数据空间技术
　　10.4　代码空间技术
　　10.5　原理
　　10.6　习题
　　10.7　深入阅读
　　10.8　巨大的节省（边栏）
　　第三部分　应用
　　第11章　排序
　　11.1　插入排序
　　11.2　一种简单的快速排序
　　11.3　更好的几种快速排序
　　11.4　原理
　　11.5　习题
　　11.6　深入阅读
　　第12章　取样问题
　　12.1　问题
　　12.2　一种解决方案
　　12.3　设计空间
　　12.4　原理
　　12.5　习题
　　12.6　深入阅读
　　第13章　搜索
　　13.1　接口
　　13.2　线性结构
　　13.3　二分搜索树
　　13.4　用于整数的结构
　　13.5　原理
　　13.6　习题
　　13.7　深入阅读
　　13.8　一个实际搜索问题（边栏）
　　第14章　堆
　　14.1　数据结构
　　14.2　两个关键函数
　　14.3　优先级队列
　　14.4　一种排序算法
　　14.5　原理
　　14.6　习题
　　14.7　深入阅读
　　第15章　字符串
　　15.1　单词
　　15.2　短语
　　15.3　生成文本
　　15.4　原理
　　15.5　习题
　　15.6　深入阅读
　　第1版跋
　　第2版跋
　　附录a　算法分类
　　附录b　估算测试
　　附录c　时空开销模型
　　附录d　代码调优法则
　　附录e　用于搜索的c++类

如何应用该书
   可以当成字典书来查（如需要实现排序或者要对3d引擎优化时，可查看对应的章节)。

我的心得与体会
   书中的性能部分和应用的排序算法部分对我的wonder.js引擎的0.5.6,0.5.7版本的优化工作很有帮助。
   书中第4章关于契约的应用我也深有感触！
   还需要读第2遍，把每个章节的习题做一遍！
   书中确实字字是珠玑，值得仔细品味和研究！

** 《OpenGL Insights》1遍（未完）
内容概要说明
   本书算是基于opengl/webgl的gem类型的书了，每个章节是一个专题，是一本提高阶段的书籍。

目录说明


如何应用该书

我的心得与体会
   书中的webgl方面的专题、性能专题以及移动方面的专题（比如介绍了tile-based架构)都是很有用的。
   而且书最后还给出了opengl es2.0的渲染管线图。
   不过还有些内容我现在暂时用不到（比如基于opengl 4.0 的
   tessellation shader，与occusion exclude相关的算法等），等到需要用到的时候，再来看。
** 《WebGL Insights》1遍
内容概要说明
   这次专门讲Webgl了，包括了介绍浏览器是怎么实现webgl的、一些图形渲染基于webgl的实现、现有的开源引擎（如babylonjs）的设
计和优化等。


目录说明
I. WebGL Implementations
1. ANGLE: A Desktop Foundation for WebGL 
2. Mozilla's Implementation of WebGL 
3. Continuous Testing of Chrome's WebGL Implementation 

II. Moving to WebGL
4. Getting Serious with JavaScript 
5. Emscripten & WebGL 
6. Data Visualization with WebGL: from Python to JavaScript 
7. Teaching an Introductory Computer Graphics Course with WebGL 

III. Mobile
8. Bug-Free and Fast Mobile WebGL 

IV. Engine Design
9. WebGL Engine Design in Babylon.js 
10. Rendering Optimizations in the Turbulenz Engine 
11. Performance and Rendering Algorithms in Blend4Web 
12. Sketchfab Material Pipeline: From File Variations to Shader Generation 
13. glslify: A module system for GLSL 
14. Budgeting Frame Time 

V. Rendering
15. Deferred Shading in Luma 
16. HDR Image-Based Lighting on the Web 
17. Real-Time Volumetric Lighting for WebGL 
18. Terrain Geometry - LOD Adapting Concentric Rings 

VI. Visualization
19. Data Visualization Techniques with WebGL 
20. hare3d - Rendering Large Models in the Browser 
21. The BrainBrowser Surface Viewer: WebGL-based Neurological Data Visualization 

VII. Interaction
22. Usability of WebGL Applications 
23. Designing Cameras for WebGL Applications 





如何应用该书

我的心得与体会
   一本非常好的书，对深入里面Webgl、学习其他开源引擎的设计和优化、移动端webgl开发和优化等都很有帮助！
** 《游戏引擎架构》 2遍
内容概要说明
   全方位讲解了3d引擎的设计以及一些重要的实现、优化细节，是一本好书！

目录说明
第一部分 基础	1
第1章 导论	3
1.1 典型游戏团队的结构	4
1.2 游戏是什么	7
1.3 游戏引擎是什么	10
1.4 不同游戏类型中的引擎差异	11
1.5 游戏引擎概观	22
1.6 运行时引擎架构	27
1.7 工具及资产管道	46
第2章 专业工具	53
2.1 版本控制	53
2.2 微软Visual Studio	61
2.3 剖析工具	78
2.4 内存泄漏和损坏检测	79
2.5 其他工具	80
第3章 游戏软件工程基础	83
3.1 重温C++及最佳实践	83
3.2 C/C++的数据、代码及内存	90
3.3 捕捉及处理错误	118
第4章 游戏所需的三维数学	125
4.1 在二维中解决三维问题	125
4.2 点和矢量	125
4.3 矩阵	139
4.4 四元数	156
4.5 比较各种旋转表达方式	164
4.6 其他数学对象	168
4.7 硬件加速的SIMD运算	173
4.8 产生随机数	180
第二部分 低阶引擎系统	183
第5章 游戏支持系统	185
5.1 子系统的启动和终止	185
5.2 内存管理	193
5.3 容器	208
5.4 字符串	225
5.5 引擎配置	234
第6章 资源及文件系统	241
6.1 文件系统	241
6.2 资源管理器	251
第7章 游戏循环及实时模拟	277
7.1 渲染循环	277
7.2 游戏循环	278
7.3 游戏循环的架构风格	280
7.4 抽象时间线	283
7.5 测量及处理时间	285
7.6 多处理器的游戏循环	296
7.7 网络多人游戏循环	304
第8章 人体学接口设备（HID）	309
8.1 各种人体学接口设备	309
8.2 人体学接口设备的接口技术	311
8.3 输入类型	312
8.4 输出类型	316
8.5 游戏引擎的人体学接口设备系统	318
8.6 人体学接口设备使用实践	332
第9章 调试及开发工具	333
9.1 日志及跟踪	333
9.2 调试用的绘图功能	337
9.3 游戏内置菜单	344
9.4 游戏内置主控台	347
9.5 调试用摄像机和游戏暂停	348
9.6 作弊	348
9.7 屏幕截图及录像	349
9.8 游戏内置性能剖析	349
9.9 游戏内置的内存统计和泄漏检测	356
第三部分 图形及动画	359
第10章 渲染引擎	361
10.1 采用深度缓冲的三角形光栅化基础	361
10.2 渲染管道	404
10.3 高级光照及全局光照	426
10.4 视觉效果和覆盖层	438
10.5 延伸阅读	446
第11章 动画系统	447
11.1 角色动画的类型	447
11.2 骨骼	452
11.3 姿势	454
11.4 动画片段	459
11.5 蒙皮及生成矩阵调色板	471
11.6 动画混合	476
11.7 后期处理	493
11.8 压缩技术	496
11.9 动画系统架构	501
11.10 动画管道	502
11.11 动作状态机	515
11.12 动画控制器	535
第12章 碰撞及刚体动力学	537
12.1 你想在游戏中加入物理吗	537
12.2 碰撞/物理中间件	542
12.3 碰撞检测系统	544
12.4 刚体动力学	569
12.5 整合物理引擎至游戏	601
12.6 展望：高级物理功能	616
第四部分 游戏性	617
第13章 游戏性系统简介	619
13.1 剖析游戏世界	619
13.2 实现动态元素：游戏对象	623
13.3 数据驱动游戏引擎	626
13.4 游戏世界编辑器	627
第14章 运行时游戏性基础系统	637
14.1 游戏性基础系统的组件	637
14.2 各种运行时对象模型架构	640
14.3 世界组块的数据格式	657
14.4 游戏世界的加载和串流	663
14.5 对象引用与世界查询	670
14.6 实时更新游戏对象	676
14.7 事件与消息泵	690
14.8 脚本	707
14.9 高层次的游戏流程	726
第五部分 总结	727
第15章 还有更多内容吗	729
15.1 一些未谈及的引擎系统	729
15.2 游戏性系统	730
参考文献	733


如何应用该书
   在实践（开发wonder.js、实现相关的算法等）时或者遇到问题时，可查阅本书的对应章节。

我的心得与体会
   本书的5、6、7、13、14章节对我现在的引擎的改进就很有帮助！
   等我要实现骨骼动画时，需要再仔细研究11章节，然后提炼出动画引擎！
** 《富爸爸》系列 1遍
内容概要说明
目前我看了下面基本书：
《富爸爸,穷爸爸》,
《富爸爸财务自由之路》,
《富爸爸辞职创业前的10堂课》
《富爸爸21世纪的生意》

目录


如何应用该书
   在实践中应用。

我的心得与体会
   书中的富人思维跟我的思维很像啊！也论述到了吸引力定律，也有很多跟灵性上相似的论点！
   看来我是走在正确的道路上！

** 《失控》未完
内容概要说明
   本书由一系列的文集组成，我目前只看了前面12章。

目录


如何应用该书

我的心得与体会
   书中提到了类似自下而上演化,去中心化,关于未来发展的趋势预测（本书写于1990年左右）,面向对象设计等内容，其中不少思想跟灵
性思想类似。
   本书的整体思想就是万物自发地演化（所谓的“失控”，即不需要过多地控制)。
   本书思考得比较深入，配有具体的案例说明，观点比较新颖，不失为一本好书。

** 《重构与模式》1遍
内容概要说明
   本书给出了通过重构来实现设计模式的实战技术。
目录
   ...

   主要包括了 创建、简化、泛化、保护、聚集操作、实用重构 这几个方面的重构到设计模式的实战。

如何应用该书
   在实践中运用（其实我已经运用了很多了）

我的心得与体会
   可先看《重构：改善既有代码的设计》，然后再看本书(因为本书用到了很多《重构》这本书的知识)
   本书对我来说没有很多新的知识可以吸收，主要是作为重构知识的复习。
