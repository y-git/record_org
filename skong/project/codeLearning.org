runtime层提供各种基础支撑 数据层做各种数据计算
许阳  09:48:35
编辑器base层做编辑器的基础框架
许阳  09:48:46
然后上面是各种派生的编辑器
许阳  09:49:34
three是3d展示的时候的一个绘制库
许阳  09:50:11
所以替换成wonder我觉得也可以
许阳  09:50:54
我们组有人在业余时间做three.ts 目的也是想把three放到runtime里面 作为一个绘制工具类
许阳  09:51:49
因为用three.js我觉得也有些问题 现在用到的有两个
许阳  09:52:36
1.three.js js写的 数学库和绘制绑定的太亲密 实际上我们自己在runtime又实现了一个math
许阳  09:54:06
2.后面有一些渲染层的优化 用three来做也不方便 而且每次打包都要打一个完整的three进去 即便很多函数在某个编辑器里根本没有用到 
y  09:58:15
嗯，这个项目看来还是设计划分得很细
y  09:59:57
wonder引擎现在还需要实现一个比较完整的室外demo和室内demo（使用blender编辑器），然后还需要进行内存以及更多得优化（如支持vao,优化glsl等）
许阳  10:00:23
我是希望你现在能来
许阳  10:01:16
然后在runtime里面做一个渲染器 开始解决现在的一些问题
许阳  10:01:52
以后项目里面保留一个精简的渲染 wonder还是继续做
许阳  10:02:43
把各种新的特性在wonder里实现然后拿到项目里来
许阳  10:04:09
从你的角度看有个大项目在这里也是好的 真实的项目会有更多的问题 逼迫你思考解决方案
许阳  10:06:00
包括整个runtime层的机制 我觉得你来后我们一起讨论都可以变得更好
y  10:06:39
runtime层是在桌面浏览器中执行的吧？
许阳  10:07:36
runtime和data目前应该是需要兼容桌面浏览器 手机浏览器 nodejs三个环境
y  10:12:43
为什么还要在nodejs中渲染？
许阳  10:12:57
哦 nodejs中不需要跑渲染
许阳  10:13:24
是加载runtime不会有问题 
许阳  10:13:51
它不会调渲染的方法 会用里面的语言机制Ioc什么的 会有里面的数学库
许阳  10:16:13
nodejs后端目前的功能是webgl各个编辑器数据的衔接 也是前端的数据和Java电商服务 渲染服务 云工厂之间的一个衔接
许阳  10:16:38
比如家具编辑器 可能每个板子 每个面都是一个物件 
许阳  10:17:03
但家居里面要加载很多家具 这样性能会很低
许阳  10:17:25
就会需要Node把它们合并成一个模型
许阳  10:18:03
这些数据结构都是data里面定义的 所以我们在后面放过nodejs转换这些很简单
许阳  10:18:37
java他们处理就比较麻烦了 基础数据结构和数学库他们不全
y  10:19:05
嗯，用nodejs对编辑器数据进行处理，然后再交给runtime来渲染吧
许阳  10:19:15
嗯嗯
y  10:19:51
我现在的exporter也是用nodejs，来处理.obj,.md2格式的数据，然后生成引擎需要的.wd格式数据
许阳  10:19:53
后端还有些c++渲染的服务器 也需要把家具那些参数化模型导出来 
许阳  10:21:03
嗯嗯
许阳  10:21:21
除了这些目前Node还封装了一个blender
许阳  10:21:50
做像3d模型导出svg之类的工作
y  10:22:02
嗯
y  10:22:09
你们项目组基本上都是做编辑器的哇，渲染这块没什么人搞哇
许阳  10:22:19
以后我们可以扩展它 做一些静态加速
许阳  10:22:44
把某些数据预先算好 前端渲染可能会更好
许阳  10:23:08
c++的渲染先有一个人在专门做
y  10:23:21
嗯
许阳  10:23:22
他封装了vray

许阳  10:24:07
高清出图
y  10:24:13
嗯
许阳  10:24:15
vr图渲染
许阳  10:24:33
这些是c++渲染引擎做的
y  10:24:36
出一些家具的静态预览图哇
许阳  10:24:39
另外还有一个cad的
许阳  10:25:01
嗯家具的 家居的效果图
许阳  10:25:06
都是它出
许阳  10:25:14
cad是出各种工程图纸
许阳  10:25:22
也有一个人专门做的





