* TODO before v1.0.0-beta


** TODO import
discard index.html, wd.js



*** TODO import asset
**** TODO import

each asset has description data(record data? store in map?)


***** TODO texture
texture asset:
upload image file(.png, ...);
create texture with the source;
add description data(wrap, filter, format...)



let (state, textureIndex ) = wd.createTexture()



let state = wd.setTextureSource(textureIndex, image, state);




store engine->texture index + description data





***** TODO mode(obj, gltf, wd)


refer to 
https://docs.unity3d.com/Manual/ImportingModelFiles.html
https://docs.unity3d.com/Manual/FBXImporter-Materials.html





inspector add "relate file" button:
for obj: 
should upload load .obj, .mtl
relate texture files by image name




for gltf: 
should upload .gltf, .bin
relate texture files by image name



for wd
should upload .wd, .bin

relate texture files by src(root src, relate to asset/ folder)




these related files should be imported before



relate to the id of theses file, not the src in asset folder!







related file is external






****** TODO convert

////add "convert" button:

auto convert after load model:
convert .obj,.gltf to .wd(no need to send to server)




then asset panel show the .wd model file icon







add "re-update" button: find texture and update description data and convert




****** TODO store .wd+.bin content to map

store texture id to .wd
(instead of texture src)

(replace texture id to src when export!)






****** TODO advanced

support embed related file



show model thumbnail(in the right-down)(refer to unity)






***** TODO data json
shouldn't import new data json! only allow edit exist data json!
(pacakge should has data json default!)





***** TODO job script

store script string in description data



**** TODO apply to scene
////***** TODO .obj, .gltf

***** TODO support hot apply!

***** TODO model
1.button->create model
(

should select use which model data(.wd model)

(if obj,gltf not converted yet, can't be used!)
)

2.load .wd file by engine api(async)



wd.load("wd string", .bin )


complete() can get the model uid








3.wait it finish!


4.add model uid to editor state->root



***** TODO texture
set map



let state = wd.setBasicMaterialMap(materialIndex, textureIndex, state);




***** TODO job script
exec script string twice(inject edit, run engine state)




***** TODO data json
not support apply!




*** TODO import project package

- dispose current scene


forEach editor state->root, dipose all children



- unzip package, get .wd, .bin, asset/ folder files, ...
  

- create and init scene by read .wd


wd.load(.wd string , .bin)






- init asset/ folder files by read asset.json


    - show in asset panel





** TODO export project package

keep folder structure not change



.wonder_project_package/
   .wd
   .bin
   wd.js
   index.html
   asset/
       asset.json
       ...



*** TODO export assets


**** TODO export all assets(include not used in scene(in .wd))

put to asset/ folder in .wonder_project_package



generate asset.json file:
store all assets->description data






**** TODO export model

export .wd + .bin(not export textures!)



**** TODO export texture

export image file
(texture info store in asset.json)




**** TODO data json
export file




**** TODO job script

generate script file






*** TODO export other file



**** TODO generate .wd+.bin from scene(engine do this)

////merge loaded .wd files
(no need to merge!  )



no need to generate textures(include in asset folder)




**** TODO generate index.html



import job script;
exec job script;




**** TODO generate wd.js












** TODO picking, axis





** TODO ui




** TODO server
*** TODO for export package
**** TODO get html, res, wd.min.js from server


*** TODO login/register


*** TODO pay


*** TODO forum



** TODO custom loading


** DONE advanced transform
CLOSED: [2018-09-20 Thu 11:15]
support rotation

support scale






** TODO improve UE



////*** TODO fix(import package): 1.load WDBAsset1.wdb; 2.drag to scene; 3.import package DemoPackage1_room.wpk;  4.drag wdb to scene;    the wdb change to room!!! but should be outdoor scene!!!






*** TODO fix: scene can be select or pick(should has transform inspector)
**** TODO fix: scene can't add other component except transform(default component, can't remove)





*** TODO fix(redo-undo): 1.rotate; 2.undo;    transform inspector->rotate not undo!!!



*** TODO fix(scene-tree): change child should refresh


*** TODO fix(left-header): dispose gameObject should refresh canvas


*** TODO fix(left-header): clone gameObject should refresh canvas




*** TODO fix(dispose gameObject)

**** TODO fix: 0.open debug;1.dispose cube1;2.dispose cube2;3.add cube3; 4.select cube3;       error!!!



**** TODO fix(import package): 0.open debug; 1.dispose all gameObjects except one cube; 2.export package wpk1; 3.dispose the cube; 4.import wpk1;    error->"expect component alive, but actual not" 


**** TODO fix(import package): 0.open debug; 1.dispose all cubes; 2.import package DemoPackage1_room.wpk;   error: "expect all wdb gameObjects->materials should be material assets or default materials, but actual not"






*** TODO fix(clone): clone point light gameObject: grid plane affected!!!

*** TODO fix(clone): should remain transform->local position,rotation,scale





*** TODO fix(clone): clone direction light gameObject 


*** TODO fix(controller): stop not change the icon to stop icon at sometime!!!



*** TODO fix(event): when move game view->arcball camera, should update inspector->rotation and scale beside position!!!

*** TODO fix(engine): gameView-> arcball: when mouse wheel too close, the camera will phi down!!!???(but scene view->arcball not has this bug!!!???)



*** TODO fix(inspector): inspector->material: 1.create material2 asset;2.change it's color to red in asset inspector; 3.gameObject1 select material2(color is red); but the color is still not change(white?);

only after:
select other gameObject;
select the gameObject1 back;

the material color change to red!!!





*** TODO fix(asset): fix "drag asset to folder node": should fail instead of rename




////*** TODO fix(sceneTree, assetTree): if node relation check fail, shouldn't error(do nothing)
*** TODO fix(sceneTree, assetTree): if node relation check fail, should warn instead of errorj

*** TODO fix(viewport):0.open chrome debug; 1.run;2.change viewport(close chrome debug);3.stop;    should update canvas size change!!!










*** TODO improve(console):should format string

e.g.:

445-61.2428.6


should format to(refer to chrome console!!!) :
[
445, 
[61.24, 28.6]
]


*** TODO improve(console):should only show 99 messages at max



*** TODO feat(picking): add pretab wdb
**** TODO feat(picking): if picking pretab wdb->all children, select the rootGameObject of the wdb!


**** TODO add "export scene as pretab wdb"(add checkbox)


**** TODO load asset->auto convert glb,gltf to pretab wdb


**** TODO add online service for user: convert glb,gltf to wdb/pretab wdb





*** TODO feat(setting): editor add setting
setting:
load glb/gltf as pretab


should store setting in localStorage?




*** TODO feat: MeshRenderer inspector: add "isRender" checkbox
if gameObject is pretab, should add "isRender" checkbox to the pretab gameObject eveven if the gameObject not has
meshRenderer!!!





*** TODO feat(material): support side


**** TODO replace basicMaterial->isDepthTest to side!!!???(remove isDepthTest)


**** TODO set gl state->side when draw gameObject(front,basic render job; draw outline job)

**** TODO wdb support side

**** TODO clone,dispose should work with side

**** TODO picking->intersect with triangle: support side


////*** TODO feat(asset): wdb support isDepthTest



*** TODO fix(hotkey)

**** TODO fix(hotkey): should consider event target??????? or not???????
e.g. if target is SceneView, "f"(focus) can work


**** TODO fix mac 
should use command
shouldn't use ctrl






*** TODO fix(event->error): if event error, the binded event should still work!!!






*** TODO feat(run): show debug info(use imgui to show)
show:
time(render, loop), fps,memory, draw call count, face count, gameObject count, 
engine version
...

*** TODO feat(publish): add more config
**** TODO cache
stream load/common load support wdb cache

setting.json add cache field?
"Scene201812300750"?

**** TODO use stream load



**** TODO debug
open contract

not compress

show debug info:
for no worker and worker






*** TODO add free camera
*** TODO support click sceneTree node to focus(refer to unity)(shortcut: f)
*** TODO "Add Component" should click other place to close

*** TODO add "clone selected sceneTree node"


*** TODO feat: inspector->map: add select list


*** TODO fix(ui): fix color picker->sketch-picker->height should be 100%


*** TODO bind shortcut(not support edit)

*** TODO feat(sceneTree): support drag to slibing
*** TODO fix: change direction light to point light: when > 4 lights. the select option should still be direction light(test snapshot)(with @mickey)

*** TODO feat: add create sphere
*** TODO feat: export,import add waiting modal?

*** TODO improve: texture inspector: show image(big size)
*** TODO fix: add gameObject should add to sceneTree node->children

*** TODO refactor: remove antd library

*** TODO set format when import texture asset
jpg rgb
png: rgba

*** TODO asset->name: add "..."

*** TODO change ui
**** TODO run-stop height change to fixed value instead of percent? (@mickey)

*** TODO [#C] fix "load asset wdb"->inspector order: arcball component, cameraGroup order has change

*** TODO engine: imgui->slider: can't drag?


*** TODO engine: firefox->arcball-> mouse scale not work








*** TODO mickey
**** TODO improve(sceneTree): need x rollbar
**** TODO feat(sceneTree): when click current sceneTree node, scroll(y scroll) to it(make it top)


**** TODO feat: add scroll bar(x, y) for sceneTree, inspector, bottom, header


**** TODO feat(pwa): add desktop icon


**** TODO optimize: pick sometimes very slow(in linux)


* TODO v1.0.0-beta
** TODO upgrade reason,reason-react version

** TODO remove antd ?(write custom message)







** TODO extremely test 
*** TODO scene has 10000 cloned lightMaterial gameObjects + 10000 cloned basicMaterial gameObjects
*** TODO scene has 5000 new lightMaterial gameObjects + 5000 new basicMaterial gameObjects
*** TODO ...



** TODO add debug/production version
*** for production
**** TODO remove Console->debug button(e.g. add log, ...)
**** TODO remove ...

**** TODO compress and merge editor/engine->resources(e.g. lato.png)

**** TODO add localStorage cache?


**** TODO set config->setting.json->isDebug to false

** TODO get resource from server
*** TODO get wd.min.js,engine->config,res(publish)



** TODO check online

*** TODO fix:loading->css(test in macbook)("WONDER" is overlap with logo)


*** TODO check more browser(e.g. qq, 360, ...)



** TODO run in mobile
*** TODO render static scene can work

*** TODO arcball/fly camera can work




** TODO more import/export
*** TODO import scene
*** TODO export/import asset





** TODO redo-undo
*** TODO select assetTree not redo-undo?



////*** TODO should release memory when remove state from stack(need confirm)





** TODO feat: add msaa





* TODO v1.0.0-rc


** TODO demo
*** TODO picture show
*** TODO room
*** TODO outdoor





** TODO engine: add examples to github(wonder.js)


** TODO editor: add examples


** TODO fix(ci->test): editor->ci test shouldn't update snapshot

need fix can't find snapshot problem!!!:
gulp changeSnapshotPath not work and will cause test fail even if all test case pass!!!


solution:
use copySnapshotFromTestToLib instead of changeSnapshotPath ?

need refer to https://github.com/facebook/jest/issues/1650



** TODO refactor
*** TODO refactor(engine): change all render data to immutable
**** TODO refactor(engine): change glslSenderType to immutable
***** TODO init material,init no material shader now use immutable state

***** TODO refactor(wonder.js):  use immutable



**** TODO refactor(engine): init, render, sub(exclude this. this is read only) should merge to state(no worker/worker)



**** TODO refactor(engine): RenderJobUtils->getOrCreateBuffer should return state and arrayBuffer 
**** TODO refactor(engine): RenderJobUtils->sendUniformRenderObjectMaterialData->sendDataFunc should return state(shaderCacheMap changed)


**** TODO refactor(engine): fix DrawOutlineJob->sendXXX:should return state???




* TODO v1.0.0-release

** TODO feat(stats): show debug info(use imgui to show)

compute:
fps
[[http://www.cnblogs.com/coco1s/p/8029582.html][【前端性能】Web 动画帧率（FPS）计算]]

render time:
cpu time
gpu time



memory:
cpu memory:
total
typeArray
...


gpu memory:
total
textures
vertex buffers
index buffers
GBuffer


frame counters:
vertices count
triangles count



show these if setMainConfig=>showDebugPanel:true




*** TODO in editor->run
show:
time(render, loop), fps,memory, draw call count, face count, gameObject count, 
engine version
...



**** TODO imgui


*** TODO in runtime


**** TODO no worker



**** TODO worker



** TODO feat(publish): add more config


*** TODO add isRoot->setting
export scene ->root(defaultly scene is not root)

*** TODO cache
stream load/common load support wdb cache

setting.json add cache field?
"Scene201812300750"?

*** TODO use stream load



*** TODO debug
open contract

not compress

show debug info:
for no worker and worker
*** TODO should store setting in localStorage?





** TODO feat: MeshRenderer inspector: add "isRender" checkbox
if gameObject is pretab, should add "isRender" checkbox to the pretab gameObject eveven if the gameObject not has
meshRenderer!!!





** TODO feat(material): support side


*** TODO replace basicMaterial->isDepthTest to side!!!???(remove isDepthTest)


*** TODO set gl state->side when draw gameObject(front,basic render job; draw outline job)

*** TODO wdb support side

*** TODO clone,dispose should work with side

*** TODO picking->intersect with triangle: support side


////*** TODO feat(asset): wdb support isDepthTest













** TODO add free camera


** TODO feat: export,import add waiting modal?

** TODO improve: texture inspector: show image(big size)


** TODO fix(engine): imgui->slider: can't drag?


** TODO fix(engine): firefox->arcball-> mouse scale not work



** TODO feat(ui): add show message ui(instead of antd->message ui)




** TODO add cache
*** TODO publish local->add cache(for stream load)






* TODO after v1.0.0
** TODO [#A] UE
*** TODO asset->name: add "..."

*** TODO decrease arcball->keydown speed??????(or not???)

*** TODO improve(outline): improve cube outline!!!




*** TODO change ui
**** TODO run-stop height change to fixed value instead of percent? (@mickey)




*** TODO feat: add scroll bar(x, y) for sceneTree, inspector, bottom, header






** TODO [#A] ci,cd workflow
*** DONE code review
CLOSED: [2019-03-05 Tue 10:09]
////use Phabricator:
https://secure.phabricator.com/book/phabricator/
https://admin.phacility.com/book/phacility/



use github->pull request



*** TODO distinguish .js and .min.js(engine, editor)


*** TODO build test,online environment



*** TODO build pre-publish environment



** TODO package
support isUseRenderWorker,isUseWebGL1/WebGL2 setting to user(so can provide corresponding engine package file(e.g.
wd.renderWorker.js, wd.webgl1.js, ...))



////** TODO add pf test, render test 
refer to Wonder.js
** TODO add canvas ui component
http://docs.cocos.com/creator/manual/zh/components/canvas.html
** TODO Dashboard
启动 Cocos Creator 并使用 Cocos 开发者帐号登录以后，就会打开 Dashboard 界面，在这里你可以新建项目、打开已有项目或获得帮
助信息。 

http://docs.cocos.com/creator/manual/zh/getting-started/dashboard.html


** TODO public package
http://docs.cocos.com/creator/manual/zh/publish/publish-web.html

build:
compress texture
...


*** TODO publish to store
http://docs.cocos.com/creator/manual/zh/extension/submit-to-store.html

NPM 第三方库
目前扩展包安装系统中没有包括安装 NPM 等包括管理系统的工作流程，因此使用了第三方库的扩展包应该将 node_modules 等文件夹也一起加入到 zip 包中。



** TODO [#A] job script, data json

*** TODO data json
open/close worker setting



**** TODO user can change setting.json->buffer
1.editor->engine->setting.json
2.publish->engine->setting.json





*** TODO editor: support edit config json

*** TODO job
**** TODO fix bug:
action->before not worker???
**** TODO support import/export job script
***** TODO wdb

***** TODO generate



*** TODO demo
**** TODO 3d snake








** TODO [#C] set imgui

*** TODO editor: extract imgui asset


**** TODO extract asset wdb->imgui func asset

**** TODO extract scene wdb->imgui func asset


** TODO [#A] pwa
*** DONE feature(pwa): should update service worker if has new content
CLOSED: [2019-03-05 Tue 07:36]
user need click open F12->Application->service workers -> Upload on reload;
(should add setting->button for user to open it!!!)

(solved by judge service-worker.js->cacheName )





*** TODO add to homescreen not work?
not work at chrome 73?




** TODO [#A] extend editor



//download cocos-creator



package.json


load,unload callback



如果你的插件会自动完成工作，别忘记通过 Editor.log, Editor.success 接口（上述接口可以在 Console API 查看详情），来告诉用户刚刚完成了哪些工作。



示例中使用到的 Editor.projectPath 接口会返回当前打开项目的绝对路径，详情可以在 Editor API 中找到。



入口程序除了可以在主进程执行 Node.js 所有标准接口以外，还可以打开编辑器面板、窗口，并通过 IPC 消息在主进程的入口程序和渲染进程的编辑器面板间进行通讯，通过编辑器面板和用户进行复杂的交互，并在相关的进程中完成业务逻辑的处理。

要通过入口程序打开一个编辑器面板：

  messages: {
    'open' () {
      // open entry panel registered in package.json
      Editor.Panel.open('myPackage');
    }
  }





扩展主菜单
http://docs.cocos.com/creator/manual/zh/extension/extends-main-menu.html






面板类型：
dockable

simple
http://docs.cocos.com/creator/manual/zh/extension/define-simple-panel.html







https://docs.unity3d.com/Manual/ExtendingTheEditor.html

http://forum.china.unity3d.com/thread-18683-1-1.html

http://jingpin.jikexueyuan.com/article/30041.html





use can:
create custom editor component
use exist editor component(main_editor, inspector, number_input, ...)
...



how can user create custom gameObject component?


*** TODO feat: add "add package wpk"(so now has "import package" and "add package")



*** TODO add plugin store
user can publish, install plugin!


*** TODO 多语言化
http://docs.cocos.com/creator/manual/zh/extension/i18n.html

http://docs.cocos.com/creator/manual/zh/advanced-topics/i18n.html

*** TODO extend in editor
refer to http://www.cocos.com/1061



data driven

plugin:
前面提到，Cocos Creator的架构完全是可扩展的插件式，我们自己开发Creator功能的时候，也是按照插件接口标准来做的，左边这张图
就是我们自己开发的核心插件。当然你也可以把这些核心插件停用甚至卸载了，因为我们是完全按照插件接口标准来开发的。这样的插件
开发方式，就允许开发者和我们引擎团队一样，自己开发编辑器扩展、定制Creator，以符合自己喜欢的工作流方式。如果你愿意公开自
己开发的Creator插件，那么就可以把它发布到我们的扩展商店里面，分享给社区里的几十万开发者使用。 


- 可以对Creator底下使用的开源引擎进行修改，并且指定工作目录到你修改后的引擎框架路径

////- AnySDK多渠道打包功能，这里面包含了上百个原生渠道和几十个H5渠道SDK，方便你快速地发布游戏，省去集成渠道SDK的烦恼

- 引擎的模块化裁剪，在这里可以可视化地反选掉你用不到的引擎功能，有效减小包体积高达30%

  



more...


*** TODO 调用引擎 API 和项目脚本???
http://docs.cocos.com/creator/manual/zh/extension/scene-script.html

not use?
(can directly use wded.xxx api to get gameObject,children,components...)

*** TODO extend in engine


*** TODO user can use redo-undo api for custom editor
https://docs.unity3d.com/ScriptReference/Undo.html
** TODO assert manager
http://docs.cocos.com/creator/manual/zh/extension/asset-management.html



** TODO [#B] 数据统计
http://docs.cocos.com/creator/manual/zh/sdk/cocos-analytics.html
https://analytics.cocos.com/docs/

** TODO [#C] sdk
AnySDK为 CP 提供一套第三方 SDK 接入解决方案，整个接入过程，不改变任何 SDK 的功能、特性、参数等，对于最终玩家而言是完全透
明无感知的。 目的是让 CP 商能有更多时间更专注于游戏本身的品质，所有 SDK 的接入工作统统交给我们吧。第三方 SDK 包括了渠道
SDK、用户系统、支付系统、广告系统、统计系统、分享系统等等。 

http://docs.cocos.com/creator/manual/zh/sdk/anysdk-overview.html
http://docs.cocos.com/creator/manual/zh/sdk/anysdk/anysdk-framework.html
http://docs.anysdk.com/



can offer pwa feature to user according to sdk?:
push message
offline
...



** TODO [#B] prefab
http://docs.cocos.com/creator/manual/zh/asset-workflow/prefab.html
http://docs.cocos.com/creator/manual/zh/getting-started/basics/editor-panels/node-library.html

https://docs.unity3d.com/560/Documentation/Manual/Prefabs.html


** TODO [#C] template
refer to unity: 
https://docs.unity3d.com/Manual/ProjectTemplates.html
which are project starters with default settings already tuned, including a sample scene. Here are some samples of the HD RP and LW RP templates


** TODO [#A] engine script

*** TODO support change property in inspector(editor)

在代码中我们不需要关心这些数值是多少，因为我们之后会直接在 属性检查器 中设置这些数值。

这些数值都是建议，一会等游戏运行起来，您完全可以按照自己的喜好随时在 属性检查器 中修改这些数值，不需要改动任何代码，很方
便吧！ 



http://docs.cocos.com/creator/manual/zh/scripting/use-component.html


*** 扩展 Inspector
http://docs.cocos.com/creator/manual/zh/extension/extends-inspector.html

editor can extend user script component's inspector!




** TODO support publish to native platform(ios, ..)
compile reason to native?bsb-native?


** TODO [#A] enhance extend editor
*** TODO use imgui
https://blogs.unity3d.com/cn/2015/12/22/going-deep-with-imgui-and-editor-customization/
https://docs.unity3d.com/Manual/ExtendingTheEditor.html
https://docs.unity3d.com/Manual/GUIScriptingGuide.html
https://github.com/ocornut/imgui


http://sol.gfxile.net/imgui/

https://www.zhihu.com/question/267602287

** TODO [#A] extend engine

*** TODO extend files
extend material(? material asset?), shader(.glsl), job(.js), script(.js), config data(.json->./Wonder.js/data/ json files)


extend service(.js?)



add config(.json) to specific the file structure in project file(.wd_project.package)


*** TODO use .wonder_extend_package package(zip file) to include all extend files



** TODO [#C] improve performance 
benchmark test





** TODO reuse user resource

*** TODO 资源导入导出
http://docs.cocos.com/creator/manual/zh/asset-workflow/import-export.html

already support?(use .wd,.css,.js,.json package data files?)


*** TODO  开发者可以将常用的控件、游戏架构以插件形式封装在一起，并在多个项目之间共享
http://docs.cocos.com/creator/manual/zh/extension/extension-workflow.html -> 插件只提供组件和资源

** TODO public package
*** TODO md5 to avoid cache

** TODO [#C] support multi thread


** TODO [#C] support multi thread->redo undo

** TODO visualization
*** TODO visualization pipeline
job pipeline(json)


** TODO switch scene

** TODO [#A] Built for Teams(multi player)
*** TODO [#A] add website to host and manage user published projects
refer to playcanvas


*** TODO [#A] support run in new tab
(send run data(wdb, ...) to server, then open new window to go to the server url)


this is used for:
1.see final result in browser
2.debug for performance in browser
3.can run in multi thread
4.can test in mobile
can generate two-dimension code





*** TODO [#A] user can browser other user's project(in editor)
refer to playcanvas



*** TODO [#C]  user can edit other user's project(in editor)(need authorization)

refer to playcanvas: PlayCanvas has many team features such as being able to chat with your teammates directly from within the Editor.


refer to unity




use git

can chat


upload asset



https://www.zhihu.com/question/24978964

unity3d asset server
https://unity3d.com/cn/unity/features/collaborate



** TODO advanced control
只让游戏运行一帧：先按下暂停键，再按运行



测试运行时，可以在任意时候暂停游戏，重新调整数值，游戏对象的位置等等，然后再继续游戏。


** TODO advanced scene tree
1. ALT + 鼠标左键点击 Hierarchy 对象可以展开和收起对象的所有子对象；


** TODO [#B] support dragable ui




** TODO add gameObject name




**  TODO [#B] support debug in mobile
publish scene to debug server(github pages?) for debug mobile and debug pc online?


show qr code?




** TODO [#B] add search






** TODO asset manage
asset can be managed by svn/git, so no need redo-undo?


*** TODO drag scene tree->gameObject to asset, can generate pretab?
refer to unity



** TODO advanced asset

*** TODO inspector add a canvas for show
add engine state


add default direction light


**** TODO material,geometry asset->icon should be show canvas->snapshot
material apply to sphere geometry data


geometry apply default light material
(use line mode instead of triangle mode)





** TODO [#A] gizmo
*** TODO add camera gizmo

*** TODO add direction light gizmo

*** TODO add point light gizmo

*** TODO advanced transform gizmo
**** TODO add detail gizmo when drag over translation/rotation gizmo(refer to playcanvas)
**** TODO rotation gizmo add "big circle gizmo"




** TODO [#A] imgui gizmo
*** TODO support color
e.g. direction light gizmo->color should equal to light color

camera->color to mark the actived camera




*** TODO camera gizmo add preview window(refer to unity)


** TODO [#C] optimize outline effect
how to make solid?


////fix???:
set is-render of outline gameObjects to be false;
render it to color buffer(open depth test) when draw origin;






////use scale instead of move out in normal?
(the effect is worse!!!)

